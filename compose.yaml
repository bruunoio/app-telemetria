services:
  app-a:
    build: 
      context: ./src
      dockerfile: ./Dockerfile
    ports:
      - "8000:8000"
    environment:
      - APP_NAME=app-a
      - APP_URL_DESTINO=http://app-b:8000
      # - APP_ERRORS=5
      - APP_LATENCY=100
      - OTLP_ENDPOINT=http://jaeger:4318/v1/traces
    networks:
      - app-network

  app-b:
    build: 
      context: ./src
      dockerfile: ./Dockerfile
    ports:
      - "8001:8000"
    environment:
      - APP_NAME=app-b
      # - APP_URL_DESTINO=http://app-c:8000
      # - APP_ERRORS=10
      # - APP_LATENCY=150
      - OTLP_ENDPOINT=http://jaeger:4318/v1/traces
    networks:
      - app-network

  app-c:
    build: 
      context: ./src
      dockerfile: ./Dockerfile
    ports:
      - "8002:8000"
    environment:
      - APP_NAME=app-c
      #- APP_ERRORS=15
      #- APP_LATENCY=200
      #- OTLP_ENDPOINT=http://jaeger:4318/v1/traces
    networks:
      - app-network
  
  # Prometheus
  #prometheus:
    #image: prom/prometheus:latest
    #ports:
      #- "9090:9090"
    #volumes:
      #- ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
    #command:
      #- '--config.file=/etc/prometheus/prometheus.yml'
      # - '--storage.tsdb.path=/prometheus'
      # - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      # - '--web.console.templates=/usr/share/prometheus/consoles'
    #networks:
      #- app-network

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"  # Porta para receber spans formato thrift via UDP
      - "16686:16686"    # Porta da interface web
      - "4317:4317"      # Porta para receber spans via OTLP
      - "4318:4318"      # Porta OTLP HTTP 
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
      - COLLECTOR_OTLP_ENABLED=true  
    networks:
      - app-network

networks:
  app-network: